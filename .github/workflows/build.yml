name: build

on:
  push:

jobs:
  cancel-previous-runs:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.10.1
        with:
          access_token: ${{ github.token }}

  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          file: Dockerfile.e2e
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: zone117x/stacks-api-e2e:latest
          cache-from: type=registry,ref=zone117x/stacks-api-e2e:latest
          cache-to: type=inline

  build_linux-x64-glibc:
    if: ${{ false }} # disabled
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
      - name: npm i
        run: npm i
      - name: Build
        run: npm run build:cargo
      - uses: actions/upload-artifact@v2
        with:
          name: linux-x64-glibc
          path: native/linux-x64-glibc.node
          if-no-files-found: error

  build_linux-arm64-glibc:
    if: ${{ false }} # disabled
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          target: aarch64-unknown-linux-gnu
      - name: Install cross compile deps
        run: |
          sudo apt-get update && sudo apt-get install -y g++-aarch64-linux-gnu libc6-dev-arm64-cross gcc-aarch64-linux-gnu qemu-user
      - name: Configure linux-arm64 cross compile
        run: |
          echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          echo 'CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_RUNNER="qemu-aarch64 -L /usr/aarch64-linux-gnu"' >> $GITHUB_ENV
          echo "CC=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          echo "CC_aarch64_unknown_linux_gnu=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          echo "AR_aarch64_unknown_linux_gnu=aarch64-linux-gnu-ar" >> $GITHUB_ENV
          echo "CXX_aarch64_unknown_linux_gnu=aarch64-linux-gnu-g++" >> $GITHUB_ENV
          echo "TARGET_ARCH=arm64" >> $GITHUB_ENV
